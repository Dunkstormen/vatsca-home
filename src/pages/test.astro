---
const BookingDataresponse = await fetch('https://cc.vatsim-scandinavia.org/api/bookings');
const BookingData = await BookingDataresponse.json();

const NetworkDataresponse = await fetch('https://data.vatsim.net/v3/vatsim-data.json');
const NetworkData = await NetworkDataresponse.json();

import '../globals.css'

const currentDate = new Date().toDateString();

// Filter bookings for today
const bookingsToday = BookingData.data.filter(session => new Date(session.time_start).toDateString() === currentDate);

// Create a map for quick lookup of live sessions
const liveSessionsMap = new Map();
for (const liveSession of NetworkData.controllers) {
    liveSessionsMap.set(liveSession.callsign, true); // Only store the key to indicate the callsign is online
}

// Add a new key to indicate if the booking is online and store in a new array
const updatedBookings = bookingsToday.map(session => ({
    ...session,
    isOnline: liveSessionsMap.has(session.callsign)
}));

console.log(updatedBookings);

---
<body class="w-screen h-screen bg-black text-white">

    <table class="table">

        {updatedBookings.map((data) => (
            <tr class="w-fit">
                <td class="px-2">{data.callsign}</td>
                <td class="px-2">{new Date(data.time_start).toLocaleTimeString('en-US')}</td>
                <td class="px-2">{new Date(data.time_end).toLocaleTimeString('en-US')}</td>
            </tr>
        ))}

    </table>
</body>

