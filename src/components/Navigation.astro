<div class="bg-white dark:bg-vatsca2 text-vatsca3 dark:text-snow max-w-screen-xl mx-auto px-5 ">
  <div class="flex flex-col lg:flex-row justify-between items-center h-full my-auto">
    <div class="flex w-full lg:w-auto items-center justify-between h-24 my-auto">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 922 427" class="h-16 fill-black dark:fill-white">
        <g id="Logo">
            <path style=""
                d="M110.08,267.06a18.71,18.71,0,0,0-3.5-2.84,35.21,35.21,0,0,0-5.37-2.83,39.68,39.68,0,0,0-6.76-2.18,33.93,33.93,0,0,0-7.55-.84q-8.58,0-12.62,3.14a10.38,10.38,0,0,0-4,8.69,9.44,9.44,0,0,0,1.27,5.13,10.87,10.87,0,0,0,3.93,3.5,30.22,30.22,0,0,0,6.64,2.66c2.66.77,5.75,1.59,9.3,2.48a104.8,104.8,0,0,1,11.77,3.5,33.53,33.53,0,0,1,8.87,4.71,19.1,19.1,0,0,1,5.62,6.82,22.1,22.1,0,0,1,2,9.84,23.83,23.83,0,0,1-2.47,11.23,21.06,21.06,0,0,1-6.77,7.67,29.84,29.84,0,0,1-10,4.35,51.48,51.48,0,0,1-12.19,1.38,60.93,60.93,0,0,1-18.9-3,54.17,54.17,0,0,1-16.48-8.64L59,310.29a28.38,28.38,0,0,0,4.52,3.5,41.34,41.34,0,0,0,6.89,3.56,59,59,0,0,0,8.51,2.78,39,39,0,0,0,9.54,1.15q8,0,12.31-2.78a9.12,9.12,0,0,0,4.35-8.21,8.78,8.78,0,0,0-1.63-5.43,14,14,0,0,0-4.65-3.81,41.15,41.15,0,0,0-7.36-3q-4.35-1.32-9.9-2.77a102.41,102.41,0,0,1-11.17-3.57,27.74,27.74,0,0,1-7.91-4.52A17.65,17.65,0,0,1,57.74,281a20.62,20.62,0,0,1-1.63-8.64,24.88,24.88,0,0,1,2.41-11.16A24,24,0,0,1,65.1,253a28.94,28.94,0,0,1,9.84-5,43.27,43.27,0,0,1,12.32-1.69,45.18,45.18,0,0,1,16.06,2.78A53.28,53.28,0,0,1,116.24,256Z" />
            <path style=""
                d="M128.92,289.16a44.8,44.8,0,0,1,2.78-15.4A42.33,42.33,0,0,1,139.85,260a41,41,0,0,1,13.1-9.84,39.6,39.6,0,0,1,17.51-3.75q11.7,0,20,5.2a33.73,33.73,0,0,1,12.56,13.52l-10.63,7.12a24.15,24.15,0,0,0-4.34-6.52,21.09,21.09,0,0,0-5.56-4.22,23.93,23.93,0,0,0-6.28-2.24,31.64,31.64,0,0,0-6.28-.66,24.57,24.57,0,0,0-11.83,2.72,26.17,26.17,0,0,0-8.51,7.18,31.85,31.85,0,0,0-5.19,10,36.76,36.76,0,0,0-1.76,11.11,34.88,34.88,0,0,0,2.06,12,32.36,32.36,0,0,0,5.73,10,28.25,28.25,0,0,0,8.76,6.94,24,24,0,0,0,11.11,2.6,27.75,27.75,0,0,0,6.46-.79,24.39,24.39,0,0,0,6.4-2.53,25.79,25.79,0,0,0,5.67-4.41,22,22,0,0,0,4.29-6.4l11.23,6.4a26.11,26.11,0,0,1-5.8,8.51,36.69,36.69,0,0,1-8.45,6.22,43.61,43.61,0,0,1-10,3.87,42.3,42.3,0,0,1-10.33,1.32,35.48,35.48,0,0,1-16.54-3.86,43.57,43.57,0,0,1-12.92-10.08,46.54,46.54,0,0,1-8.45-14.13A44.71,44.71,0,0,1,128.92,289.16Z" />
            <path style=""
                d="M242.18,246.9H254l33.8,85.73H273.58l-9.06-23.31H231.43l-8.93,23.31H208.13Zm19.68,52.4L248.1,262.47,233.85,299.3Z" />
            <path style="" d="M313.18,272.25v60.38H299.66V246.9h10.62l49,61.82V247H373v85.61H361.72Z" />
            <path style=""
                d="M393.48,332.63V246.9h30.43a45.21,45.21,0,0,1,18.17,3.38,37.42,37.42,0,0,1,13,9.17A38.57,38.57,0,0,1,463,273a51.11,51.11,0,0,1,2.66,16.6,50.22,50.22,0,0,1-3,17.69,38.65,38.65,0,0,1-8.39,13.53,37.2,37.2,0,0,1-13.16,8.69,46.39,46.39,0,0,1-17.27,3.08Zm58.44-43a39.38,39.38,0,0,0-1.87-12.43,27.19,27.19,0,0,0-5.49-9.73,25.52,25.52,0,0,0-8.82-6.33,29,29,0,0,0-11.83-2.3H407v61.82h16.91a29.05,29.05,0,0,0,12-2.35,24.69,24.69,0,0,0,8.82-6.52,28.24,28.24,0,0,0,5.37-9.84A40.23,40.23,0,0,0,451.92,289.64Z" />
            <path style="" d="M481.14,332.63V246.9h13.53v85.73Z" />
            <path style="" d="M528.72,272.25v60.38H515.19V246.9h10.63l49,61.82V247h13.65v85.61H577.26Z" />
            <path style=""
                d="M634.25,246.9h11.84l33.81,85.73H665.65l-9.06-23.31H623.51l-8.94,23.31H600.2Zm19.68,52.4-13.76-36.83L625.92,299.3Z" />
            <path style="" d="M689.8,246.9l25.84,68.7,25.72-68.7h14.37l-34.3,85.73H709.84L675.43,246.9Z" />
            <path style="" d="M767.44,332.63V246.9H781v85.73Z" />
            <path style=""
                d="M826.73,246.9h11.83l33.81,85.73H858.12l-9.06-23.31H816L807,332.63H792.67Zm19.68,52.4-13.77-36.83L818.39,299.3Z" />
            <path style="" d="M193.58,79.49l54,129.2,54-129.2h10.8l-60,142H243l-60.2-142Z" />
            <path style=""
                d="M366.38,79.49h8.8l60,142h-10.8l-19.8-46.8h-67.8L317,221.49H306Zm35.4,86.8-31-74.4-31.6,74.4Z" />
            <path style="" d="M541.78,88.69h-52v132.8h-10.2V88.69h-52v-9.2h114.2Z" />
            <path style=""
                d="M646.18,103.09q-13.8-15.41-39-15.4-20.8,0-30.3,7.9t-9.5,21.3a23.85,23.85,0,0,0,2.4,11.3,20.63,20.63,0,0,0,7.5,7.7,50,50,0,0,0,12.9,5.4q7.8,2.21,18.8,4.6,11.4,2.4,20.7,5.3a59.81,59.81,0,0,1,15.8,7.3,30.8,30.8,0,0,1,10,10.8q3.49,6.41,3.5,15.8a34.57,34.57,0,0,1-3.7,16.4,32.91,32.91,0,0,1-10.4,11.7,48.94,48.94,0,0,1-16,7.1,82.86,82.86,0,0,1-20.7,2.4q-33.2,0-56.2-21.2l5.4-8.2a65.13,65.13,0,0,0,22,14.9,74.22,74.22,0,0,0,29.2,5.5q18.6,0,29.1-6.8t10.5-20.6a23.6,23.6,0,0,0-2.8-11.9,25.13,25.13,0,0,0-8.3-8.5,55.2,55.2,0,0,0-13.9-6.2q-8.4-2.59-19.6-5-11.4-2.4-20.1-5.1a53.08,53.08,0,0,1-14.6-6.8,27.28,27.28,0,0,1-8.9-9.9q-3-5.8-3-14.6a37.47,37.47,0,0,1,3.7-17A36,36,0,0,1,571,88.79a46,46,0,0,1,15.8-7.7,75,75,0,0,1,20.4-2.6,69,69,0,0,1,24.6,4.1,58,58,0,0,1,19.6,12.5Z" />
            <path style="" d="M684.38,221.49v-142h10.2v142Z" />
            <path style=""
                d="M860.18,221.49V98.69l-56,95.8h-6.4l-56-95.8v122.8h-10.2v-142h10.2L801,181.09l59.2-101.6h10.2v142Z" />
            <polygon style="fill: #6fc4e5" points="50 221 115 80 179 221 114 175 50 221" />
        </g>
    </svg>
      <div class="flex lg:hidden h-full ">
        <button id="astronav-menu" aria-label="Toggle Menu">
          <svg
            fill="currentColor"
            class="w-8 h-8 text-gray-800 dark:text-gray-200"
            width="32"
            height="32"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <title>Toggle Menu</title>
            <path
              class="astronav-close-icon astronav-toggle hidden"
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M18.278 16.864a1 1 0 01-1.414 1.414l-4.829-4.828-4.828 4.828a1 1 0 01-1.414-1.414l4.828-4.829-4.828-4.828a1 1 0 011.414-1.414l4.829 4.828 4.828-4.828a1 1 0 111.414 1.414l-4.828 4.829 4.828 4.828z"
            ></path>
            <path
              class="astronav-open-icon astronav-toggle"
              fill-rule="evenodd"
              d="M4 5h16a1 1 0 010 2H4a1 1 0 110-2zm0 6h16a1 1 0 010 2H4a1 1 0 010-2zm0 6h16a1 1 0 010 2H4a1 1 0 010-2z"
            ></path>
          </svg>
        </button>
      </div>
    </div>

    <nav
      class="astronav-items astronav-toggle hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0"
    >
      <ul class="flex flex-col font-semibold lg:flex-row gap-4 lg:gap-8 text-xl">
        <a href="/">Home</a>
        <a href="/pilots">Pilots</a>
        <a href="/atc">ATC</a>
        <a href="/about">About</a>
      </ul>
      <div class="lg:hidden flex items-center mt-3 gap-4 pb-4">
        <a
          href="/#bookings"
          class="rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 w-full px-4 py-2 bg-gray-100 dark:bg-vatsca3 hover:bg-gray-200 border-2 border-transparent"
          >Bookings
        </a>
        <a
          href="#"
          class="rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 w-full px-4 py-2 bg-vatsca2 text-white hover:bg-gray-800 border-2 border-transparent"
          >Join Comunity
        </a>
      </div>
    </nav>

    <script is:inline>
      (function () {
        const closeOnClick = false;

        ["DOMContentLoaded", "astro:after-swap"].forEach((event) => {
          document.addEventListener(event, addListeners);
        });

        // Function to clone and replace elements
        function cloneAndReplace(element) {
          const clone = element.cloneNode(true);
          element.parentNode.replaceChild(clone, element);
        }

        function addListeners() {
          // Clean up existing listeners
          const oldMenuButton = document.getElementById("astronav-menu");
          if (oldMenuButton) {
            cloneAndReplace(oldMenuButton);
          }

          const oldDropdownMenus =
            document.querySelectorAll(".astronav-dropdown");
          oldDropdownMenus.forEach((menu) => {
            cloneAndReplace(menu);
          });

          // Mobile nav toggle
          const menuButton = document.getElementById("astronav-menu");
          menuButton && menuButton.addEventListener("click", toggleMobileNav);

          // Dropdown menus
          const dropdownMenus = document.querySelectorAll(".astronav-dropdown");
          dropdownMenus.forEach((menu) => {
            const button = menu.querySelector("button");
            button &&
              button.addEventListener("click", (event) =>
                toggleDropdownMenu(event, menu, dropdownMenus)
              );

            // Handle Submenu Dropdowns
            const dropDownSubmenus = menu.querySelectorAll(
              ".astronav-dropdown-submenu"
            );

            dropDownSubmenus.forEach((submenu) => {
              const submenuButton = submenu.querySelector("button");
              submenuButton &&
                submenuButton.addEventListener("click", (event) => {
                  event.stopImmediatePropagation();
                  toggleSubmenuDropdown(event, submenu);
                });
            });
          });

          // Clicking away from dropdown will remove the dropdown class
          document.addEventListener("click", closeAllDropdowns);

          if (closeOnClick) {
            handleCloseOnClick();
          }
        }

        function toggleMobileNav() {
          [...document.querySelectorAll(".astronav-toggle")].forEach((el) => {
            el.classList.toggle("hidden");
          });
        }

        function toggleDropdownMenu(event, menu, dropdownMenus) {
          toggleMenu(menu);

          // Close one dropdown when selecting another
          Array.from(dropdownMenus)
            .filter((el) => el !== menu && !menu.contains(el))
            .forEach(closeMenu);

          event.stopPropagation();
        }

        function toggleSubmenuDropdown(event, submenu) {
          event.stopPropagation();
          toggleMenu(submenu);

          // Close sibling submenus at the same nesting level
          const siblingSubmenus = submenu
            .closest(".astronav-dropdown")
            .querySelectorAll(".astronav-dropdown-submenu");
          Array.from(siblingSubmenus)
            .filter((el) => el !== submenu && !submenu.contains(el))
            .forEach(closeMenu);
        }

        function closeAllDropdowns(event) {
          const dropdownMenus = document.querySelectorAll(".dropdown-toggle");
          const dropdownParent = document.querySelectorAll(
            ".astronav-dropdown, .astronav-dropdown-submenu"
          );
          const isButtonInsideDropdown = [
            ...document.querySelectorAll(
              ".astronav-dropdown button, .astronav-dropdown-submenu button, #astronav-menu"
            ),
          ].some((button) => button.contains(event.target));
          if (!isButtonInsideDropdown) {
            dropdownMenus.forEach((d) => {
              // console.log("I ran", d);
              // if (!d.contains(event.target)) {
              d.classList.remove("open");
              d.removeAttribute("open");
              d.classList.add("hidden");
              // }
            });
            dropdownParent.forEach((d) => {
              d.classList.remove("open");
              d.removeAttribute("open");
              d.setAttribute("aria-expanded", "false");
            });
          }
        }

        function toggleMenu(menu) {
          menu.classList.toggle("open");
          const expanded = menu.getAttribute("aria-expanded") === "true";
          menu.setAttribute("aria-expanded", expanded ? "false" : "true");
          menu.hasAttribute("open")
            ? menu.removeAttribute("open")
            : menu.setAttribute("open", "");

          const dropdownToggle = menu.querySelector(".dropdown-toggle");
          const dropdownExpanded = dropdownToggle.getAttribute("aria-expanded");
          dropdownToggle.classList.toggle("hidden");
          dropdownToggle.setAttribute(
            "aria-expanded",
            dropdownExpanded === "true" ? "false" : "true"
          );
        }

        function closeMenu(menu) {
          // console.log("closing", menu);
          menu.classList.remove("open");
          menu.removeAttribute("open");
          menu.setAttribute("aria-expanded", "false");
          const dropdownToggles = menu.querySelectorAll(".dropdown-toggle");
          dropdownToggles.forEach((toggle) => {
            toggle.classList.add("hidden");
            toggle.setAttribute("aria-expanded", "false");
          });
        }

        function handleCloseOnClick() {
          const navMenuItems = document.querySelector(".astronav-items");
          const navToggle = document.getElementById("astronav-menu");
          const navLink = navMenuItems && navMenuItems.querySelectorAll("a");

          const MenuIcons = navToggle.querySelectorAll(".astronav-toggle");

          navLink &&
            navLink.forEach((item) => {
              item.addEventListener("click", () => {
                navMenuItems?.classList.add("hidden");
                MenuIcons.forEach((el) => {
                  el.classList.toggle("hidden");
                });
              });
            });
        }
      })();
    </script>
    <div class="hidden lg:flex items-center gap-4">
        <a
        href="/#bookings"
        class="rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 w-32 px-4 py-2 bg-gray-100 dark:bg-snow dark:text-vatsca3 hover:bg-gray-200 border-2 border-transparent"
        >Bookings
      </a>
      <a
      href="#"
      class="rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 w-40 px-4 py-2 bg-vatsca2 dark:bg-snow dark:text-vatsca3 text-snow hover:bg-vatsca3 border-2 border-transparent"
      >Join Comunity
    </a>
    </div>
  </div>
</div>
